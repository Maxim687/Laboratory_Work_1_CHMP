#Перше завдання
from scipy import integrate 
import math
eps = 0.0001
def f1(x): 
    return 1/math.sqrt(x**2 + 1) 
def trap(f1,a,b,n): 
    h=(b-a)/n 
    sum=0.5*(f1(a)+f1(b)) 
    for i in range(1,n): 
        sum+=f1(a+i*h)
    return sum*h
v,err = integrate.quad(f1,0.2,1.2)#Перевірка
#Перевірка точності за правилом Рунге:
if abs (trap(f1, 0.2, 1.2, 2*10) -trap(f1, 0.2, 1.2, 10))/3. <= eps: 
    print("Trapetzia method:",round (trap(f1,0.2,1.2,10), 5)) 
print("Check for the trapetzia method= ",round(v, 5))
#Друге завдання
from scipy import integrate 
import math
eps = 0.001
def f1(x): 
    return 1/math.sqrt(x + 3) 
def left_rec(f1,a,b,n): 
    h=(b-a)/n 
    sum=0 
    for i in range(0,n): 
        sum+=f1(a+i*h) 
    return sum*h 
v,err = integrate.quad(f1,1.2,2)#Перевірка
#Перевірка точності за правилом Рунге:
if abs(left_rec(f1,2.1,3.6,2*10) - left_rec(f1,2.1,3.6,10))/3. <=eps:
    print("left rectangle:",round (left_rec(f1,2.1,3.6,10), 5)) 
def right_rec(f1,a,b,n): 
    h=(b-a)/n 
    sum=0 
    for i in range(1,n+1): 
        sum+=f1(a+i*h) 
    return sum*h 
print("right rectangle:",round (right_rec(f1,2.1,3.6,10), 5)) 
def aver_rec(f1,a,b,n): 
    h=0.08 
    sum=0 
    for i in range(0,n): 
        sum+=f1(a+i*h) 
    return sum*h 
print("average rectangle:",round (aver_rec(f1,2.1,3.6,10), 5)) 
print("Check for the rectangle method= ",round (v, 5))
#Третє завдання
from scipy import integrate 
import math
eps = 0.0001
def f1(x): 
    return math.cos(x)/(x**2)+1 
def simpson(a,b,n): 
    h = (b - a) / n 
    integr = f1(a) + f1(b) 
    for i in range(1,n): 
        k = a + i*h 
        if i%2 == 0: 
            integr += 2 * f1(k) 
        else: 
            integr += 4 * f1(k) 
    integr *= h/3 
    return integr 
if abs(simpson(0.8,1.2,2*8) -simpson(0.8,1.2,8))/ 15. <= eps: 
   print("Simpsone method:",round (simpson(0.8,1.2,8), 5)) 
v,err = integrate.quad(f1,0.8,1.2)#Перевірка 
print("Check for the simpsone method= ",round(v, 5))
